version: '3.5'

networks:
  # Network for api gateway
  network-gateway:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.2.0/24
  # Network for microservices
  network-microservice:
    #internal: true
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.4.0/24

services:
  db:
   image: mcr.microsoft.com/mssql/server:2022-latest
   container_name: db
   restart: on-failure
   environment:
    - "ACCEPT_EULA=Y"
    - "SA_PASSWORD=pass123!"
   ports:
    - "1433:1433"
   networks:
    - network-microservice

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    volumes:
      - type: volume
        source: MONGO_DATA
        target: /data/db
      - type: volume
        source: MONGO_CONFIG
        target: /data/configdb
    ports:
      - "27017:27017"
    networks:
      - network-microservice
    
  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    links:
      - mongo
    ports:
      - "8081:8081"
    environment: 
      - ME_CONFIG_MONGODB_URL=mongodb://mongo:27017
    networks:
      - network-microservice

  elasticsearch:
   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.18
   container_name: elasticsearch
   restart: on-failure
   ports:
    - "9200:9200"
   environment:
    - bootstrap.memory_lock=true
    - cluster.name=docker-cluster
    - cluster.routing.allocation.disk.threshold_enabled=false
    - discovery.type=single-node
    - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
   ulimits:
       memlock:
         hard: -1
         soft: -1
   volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data
   networks:
    - network-microservice

  kibana:
   image: docker.elastic.co/kibana/kibana:7.17.18
   container_name: kibana
   restart: on-failure
   ports:
    - "5601:5601"
   depends_on:
    - elasticsearch
   networks:
    - network-microservice

  apm:
   image: docker.elastic.co/apm/apm-server:7.17.18
   container_name: apm
   restart: on-failure
   ports:
    - "8200:8200"
   depends_on:
    - kibana
    - elasticsearch
   cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
   cap_drop: ["ALL"]
   command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
   networks:
    - network-microservice
   healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: on-failure
    environment:
     - RABBITMQ_DEFAULT_USER=user
     - RABBITMQ_DEFAULT_PASS=password
    ports:
     - "5672:5672"
     - "15672:15672"
    networks:
     - network-microservice

  consul:
    image: consul:1.15.4
    container_name: consul
    restart: on-failure
    volumes:
    - consul-data:/consul/config
    ports:
     - "8500:8500"
    networks:
     - network-microservice

volumes:
  elasticsearch-data:
  consul-data:
  MONGO_DATA:
    name: MONGO_DATA
  MONGO_CONFIG:
    name: MONGO_CONFIG